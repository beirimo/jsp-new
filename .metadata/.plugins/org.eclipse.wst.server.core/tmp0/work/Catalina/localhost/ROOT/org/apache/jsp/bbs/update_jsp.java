/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-02 08:31:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div class=\"row justify-content-center\">\r\n");
      out.write("	<div class=\"col-10\">\r\n");
      out.write("		<h1>글수정 페이지 </h1>\r\n");
      out.write("		<form class=\"p-5\" name=\"frm\" method=\"post\" action=\"/bbs/update\">\r\n");
      out.write("			<!-- 패딩 5까지 가능 '''액션은 이동하고자하는 주소인데 같으면 생략가능 -->\r\n");
      out.write("			<input name=\"writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.uid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" type=\"hidden\">\r\n");
      out.write("			<input name=\"bid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bbs.bid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" type=\"hidden\">\r\n");
      out.write("			<!-- 아이뒤를 받아와서 보이는창을 숨기기 -->\r\n");
      out.write("			<input type=\"text\" placeholder=\"	제목을 쓰세요\" class=\"form-control mb-3\" name=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bbs.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" }>\r\n");
      out.write("			<textarea class=\"form-control\" name=\"contents\" cols=\"30\" rows=\"12\"\r\n");
      out.write("				placeholder=\"\r\n");
      out.write("	질문글을 쓰는 회원님. 혹시 이 글을 작성하기전에 궁금하신 것에 대해 검색을 해보셨나요?\r\n");
      out.write("	우리는 10년 이상의 시간을 쭉 이어져 오면서 여러 회원님들이 만들어놓은 방대한 정보가 카페에 있습니다.\r\n");
      out.write("	물론 개개인의 문제에 맞는 답변을 다 맞추지는 못하지만, 이 글을 작성하시기 전에 한번 검색을 해주세요.\r\n");
      out.write("	그래도 없다면 질문을 해주세요!\r\n");
      out.write("	또한 자세하고 확실한 답변을 받고 싶다면 스크린샷 이미지, 데이터 등 더 자세한 정보를 질문에 포함하면 좋습니다.\r\n");
      out.write("	여러분이 다는 질문 글에 간단한 댓글을 다는 일도 다른 회원들에겐 시간을 투자하는 일입니다.\r\n");
      out.write("	그 분들의 정성이 헛되지 않게, 답변이 달린다면 꼭 감사합니다라는 말을 적어주시길 바랍니다.\r\n");
      out.write("	마지막으로 답변이 달린 글을 삭제한다면 답변하신 분들을 오히려 무시하는 행위가 될 수 있으니\r\n");
      out.write("	글 삭제는 삼가해 주시길 바랍니다. (상황에 따라 제재될 수 있습니다)\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bbs.contents}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"text-end mt-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary px-5\">수정</button>\r\n");
      out.write("				<!-- 경로 지정안하면 다시 posts/insert로 다시간다. px = 패딩x라서 뚱뚱해짐-->\r\n");
      out.write("				<button type=\"reset\" class=\"btn btn-danger px-5\">다시쓰기</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	$(frm).on(\"submit\", function(e){\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		const title=$(frm.title).val();\r\n");
      out.write("		if(title==\"\"){\r\n");
      out.write("			alert(\"제목을 입력하세요.\");\r\n");
      out.write("			$(frm.title).focus();\r\n");
      out.write("		} else{\r\n");
      out.write("			if(!confirm(\"글을 수정하시겠습니까?\")) return;\r\n");
      out.write("			frm.submit();\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
