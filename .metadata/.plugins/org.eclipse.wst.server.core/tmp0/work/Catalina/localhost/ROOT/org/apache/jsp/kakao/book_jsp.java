/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-02 05:46:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.kakao;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class book_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<h1>도서검색 </h1>\r\n");
      out.write("<div class = \"row mb-2\">\r\n");
      out.write("    <div class = \"col-6 col-md-4\"> <!-- 해상도에 따라 큰거일때 6 작은거일때 4로 한다.-->\r\n");
      out.write("        <form action=\"\" class=\"input-group mb-3\" name = \"frm\">\r\n");
      out.write("            <input type=\"text\" class = \"form-control form-control-lg \" name = \"query\" value = \"자바의 정석\" placeholder=\"검색하실 책제목을 입력하세요\">\r\n");
      out.write("            <button class=\"btn btn-primary\" >검색</button>\r\n");
      out.write("            <br>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id = \"div_book\" class=\"row\"></div>\r\n");
      out.write("<div class = \"text-center my-4\"> <!-- my는 마직 y축이라는 뜻-->\r\n");
      out.write("    <button class = \"btn btn-primary\" id = \"prev\">이전</button>\r\n");
      out.write("    <span class = \"mx-2\" id = \"page\"><b>1</b></span> <!-- 같은줄에 하기위해 div아니고 span으로 한거임. -->\r\n");
      out.write("    <button class = \"btn btn-danger\" id = \"next\">다음</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script id=\"temp_book\" type=\"X-handlebars-template\">\r\n");
      out.write("	{{#each documents}}\r\n");
      out.write("		<div class=\"col-6 col-md-4 col-lg-2\">\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<img src=\"{{check thumbnail}}\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"card-footer\">\r\n");
      out.write("					<div class=\"ellipsis\">{{title}}</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	var myQuery = $(frm.query).val(); //frm폼안에있는 query에 있는 밸류값을 들고와서 qeury변수 안에 넣어준다.\r\n");
      out.write("	var page = 1;\r\n");
      out.write("	getData();\r\n");
      out.write("	\r\n");
      out.write("    //이미지를 클릭한경우 \r\n");
      out.write("    $(\"#div_book\").on(\"click\", \"img\", function(){\r\n");
      out.write("       const id=$(this).attr(\"id\");\r\n");
      out.write("//    alert(id);\r\n");
      out.write("    $(\"#modal\" + id).modal(\"show\");\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    //이미지 유무 체크 함수 만들기 \r\n");
      out.write("    Handlebars.registerHelper(\"check\", function(thumbnail){\r\n");
      out.write("        if(thumbnail){\r\n");
      out.write("            return thumbnail;\r\n");
      out.write("        }else{\r\n");
      out.write("            return \"http://via.placeholder.com/146x174\"\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    //다음버튼 클릭\r\n");
      out.write("    $(\"#next\").on(\"click\", function(){//page를 1업하고 싶은데 page의 변수가 없으니 전역변수로 하나 설정해주자\r\n");
      out.write("        page++;\r\n");
      out.write("        getData();\r\n");
      out.write("    });\r\n");
      out.write("    $(\"#prev\").on(\"click\", function(){//page를 1업하고 싶은데 page의 변수가 없으니 전역변수로 하나 설정해주자\r\n");
      out.write("        page--;\r\n");
      out.write("        getData();\r\n");
      out.write("    });\r\n");
      out.write("    $(frm).on(\"submit\", function(e){ //frm 이 submit이벤트를  function(e)에 넣어줌. \r\n");
      out.write("        e.preventDefault(); //e를 막아라.\r\n");
      out.write("        myQuery=$(frm.query).val();\r\n");
      out.write("        if(myQuery == \"\"){\r\n");
      out.write("            alert(\"검색하실 제목을 입력하세요.\")\r\n");
      out.write("        }else{\r\n");
      out.write("            page = 1; \r\n");
      out.write("            getData();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("	function getData(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type :\"get\",\r\n");
      out.write("			url:\"https://dapi.kakao.com/v3/search/book?target=title\",\r\n");
      out.write("			headers:{\"Authorization\":\"KakaoAK 89e3021ad2846184fd12b67daf705b0f\"},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			data:{\"query\": myQuery, page:page, size:6},\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				const temp=Handlebars.compile($(\"#temp_book\").html());\r\n");
      out.write("				$(\"#div_book\").html(temp(data));\r\n");
      out.write("				const last = Math.ceil(data.meta.pageable_count/6);\r\n");
      out.write("	                $(\"#page\").html(page + \"/\" +last);\r\n");
      out.write("	                if(page == 1){\r\n");
      out.write("	                    $(\"#prev\").attr(\"disabled\", true)\r\n");
      out.write("	                }else{\r\n");
      out.write("	                    $(\"#prev\").attr(\"disabled\", false)\r\n");
      out.write("	                }\r\n");
      out.write("	                if(data.meta.is_end){\r\n");
      out.write("	                    $(\"#next\").attr(\"disabled\", true)\r\n");
      out.write("	                }else{\r\n");
      out.write("	                    $(\"#next\").attr(\"disabled\", false)\r\n");
      out.write("	                }\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
